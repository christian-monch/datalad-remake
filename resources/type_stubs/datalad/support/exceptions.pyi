from _typeshed import Incomplete
from datalad.runner.exception import CommandError as CommandError

lgr: Incomplete

class CapturedException:
    tb: Incomplete
    def __init__(self, exc, limit: Incomplete | None = None, capture_locals: bool = False, level: int = 8, logger: Incomplete | None = None) -> None: ...
    def format_oneline_tb(self, limit: Incomplete | None = None, include_str: bool = True): ...
    def format_standard(self): ...
    def format_short(self): ...
    def format_with_cause(self): ...
    @property
    def message(self): ...
    @property
    def name(self): ...

def format_oneline_tb(exc, tb: Incomplete | None = None, limit: Incomplete | None = None, include_str: bool = True): ...
def format_exception_with_cause(e): ...

class MissingExternalDependency(RuntimeError):
    name: Incomplete
    ver: Incomplete
    msg: Incomplete
    def __init__(self, name, ver: Incomplete | None = None, msg: str = '') -> None: ...

class BrokenExternalDependency(RuntimeError): ...

class DeprecatedError(RuntimeError):
    version: Incomplete
    new: Incomplete
    msg: Incomplete
    def __init__(self, new: Incomplete | None = None, version: Incomplete | None = None, msg: str = '') -> None: ...

class OutdatedExternalDependency(MissingExternalDependency):
    ver_present: Incomplete
    def __init__(self, name, ver: Incomplete | None = None, ver_present: Incomplete | None = None, msg: str = '') -> None: ...

class AnnexBatchCommandError(CommandError): ...
class CommandNotAvailableError(CommandError): ...

class FileNotInAnnexError(IOError, CommandError):
    def __init__(self, cmd: str = '', msg: str = '', code: Incomplete | None = None, filename: str = '') -> None: ...
    def to_str(self, include_output: bool = True): ...

class FileInGitError(FileNotInAnnexError): ...
class FileNotInRepositoryError(FileNotInAnnexError): ...

class InvalidGitReferenceError(ValueError):
    ref: Incomplete
    def __init__(self, ref, *args, **kwargs) -> None: ...

class GitIgnoreError(CommandError):
    pattern: Incomplete
    paths: Incomplete
    def __init__(self, cmd: str = '', msg: str = '', code: Incomplete | None = None, stdout: str = '', stderr: str = '', paths: Incomplete | None = None) -> None: ...
    def to_str(self, include_output: bool = True): ...

class PathOutsideRepositoryError(Exception):
    file_: Incomplete
    repo: Incomplete
    def __init__(self, file_, repo) -> None: ...

class PathKnownToRepositoryError(Exception): ...
class GitError(Exception): ...
class NoSuchPathError(GitError, OSError): ...

class MissingBranchError(Exception):
    repo: Incomplete
    branch: Incomplete
    branches: Incomplete
    msg: Incomplete
    def __init__(self, repo, branch, available_branches: Incomplete | None = None, msg: Incomplete | None = None) -> None: ...

class InsufficientArgumentsError(ValueError): ...
class NoDatasetArgumentFound(InsufficientArgumentsError): ...
class NoDatasetFound(NoDatasetArgumentFound): ...

class OutOfSpaceError(CommandError):
    sizemore_msg: Incomplete
    def __init__(self, sizemore_msg: Incomplete | None = None, **kwargs) -> None: ...
    def to_str(self, include_output: bool = True): ...

class RemoteNotAvailableError(CommandError):
    remote: Incomplete
    def __init__(self, remote, **kwargs) -> None: ...
    def to_str(self, include_output: bool = True): ...

class InvalidInstanceRequestError(RuntimeError):
    id: Incomplete
    msg: Incomplete
    def __init__(self, id_, msg: Incomplete | None = None) -> None: ...

class InvalidGitRepositoryError(GitError): ...
class InvalidAnnexRepositoryError(RuntimeError): ...

class DirectModeNoLongerSupportedError(NotImplementedError):
    repo: Incomplete
    def __init__(self, repo, msg: Incomplete | None = None) -> None: ...

class IncompleteResultsError(RuntimeError):
    results: Incomplete
    failed: Incomplete
    def __init__(self, results: Incomplete | None = None, failed: Incomplete | None = None, msg: Incomplete | None = None) -> None: ...

class InstallFailedError(CommandError): ...
class ConnectionOpenFailedError(CommandError): ...

class DownloadError(Exception):
    status: Incomplete
    def __init__(self, msg: Incomplete | None = None, status: Incomplete | None = None, **kwargs) -> None: ...

class IncompleteDownloadError(DownloadError): ...
class UnaccountedDownloadError(IncompleteDownloadError): ...
class TargetFileAbsent(DownloadError): ...

class AccessDeniedError(DownloadError):
    supported_types: Incomplete
    def __init__(self, msg: Incomplete | None = None, supported_types: Incomplete | None = None, **kwargs) -> None: ...

class AnonymousAccessDeniedError(AccessDeniedError): ...
class AccessPermissionExpiredError(AccessDeniedError): ...
class AccessFailedError(DownloadError): ...

class UnhandledRedirectError(DownloadError):
    url: Incomplete
    def __init__(self, msg: Incomplete | None = None, url: Incomplete | None = None, **kwargs) -> None: ...

class CrawlerError(Exception): ...
class PipelineNotSpecifiedError(CrawlerError): ...
class DataLadWarning(Warning): ...
class OutdatedExternalDependencyWarning(DataLadWarning): ...
